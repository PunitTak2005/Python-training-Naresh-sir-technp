Loops in Python allow you to execute a block of code repeatedly based on a condition or over a sequence (like a list, tuple, string, etc.). The two main types of loops in Python are `for` loops and `while` loops.

### 1. **`for` Loop**
The `for` loop iterates over a sequence (like a list, tuple, dictionary, set, or string) and executes the block of code for each element in the sequence.

**Syntax:**
```python
for element in sequence:
    # Code to execute for each element
```

**Example:**
```python
# Iterating over a list
fruits = ["apple", "banana", "cherry"]
for fruit in fruits:
    print(fruit)
```

**Output:**
```
apple
banana
cherry
```

### 2. **`while` Loop**
The `while` loop continues to execute a block of code as long as the specified condition is `True`.

**Syntax:**
```python
while condition:
    # Code to execute while the condition is True
```

**Example:**
```python
# Using a while loop
count = 0
while count < 5:
    print(count)
    count += 1
```

**Output:**
```
0
1
2
3
4
```

### 3. **`break` and `continue` Statements**
- **`break`**: Exits the loop prematurely.
- **`continue`**: Skips the rest of the code inside the loop for the current iteration and moves to the next iteration.

**Example using `break`:**
```python
for i in range(10):
    if i == 5:
        break
    print(i)
```

**Output:**
```
0
1
2
3
4
```

**Example using `continue`:**
```python
for i in range(10):
    if i % 2 == 0:
        continue
    print(i)
```

**Output:**
```
1
3
5
7
9
```

These are the basics of loops in Python. They are powerful tools for iterating over sequences and performing repetitive tasks.
